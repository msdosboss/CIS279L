Off: off is the state that the computer is in before the boot process.

BIOS: The BIOS is firmware that first ensures that the computers hardware is properly configured. If it pass the POST (power-on self test) it will then look for a drive with an MBR
in order to begin the boot process of the kernel

MBR: The Master Boot Record is a partion of a drive that contians 512 bytes worth of exacutable code. The purpose of it is to load the seconds stage bootloader

bootloader: The bootloaders purpose is to load the kernal. This can sometimes be done in one step through the MBR code this is known as a single stage bootloader. Although most of the
time the bootloader is broken up into 2 parts. The "first stage bootloader" which is the code in the MBR then the MBR loads the second stage bootloader which completes the process
of loading the kernel

kernel: The kernel is the lowest level of the OS it is in charge of managing hardware. The first thing the kernel does is initialize the hardware drivers and mounts the root filesystem 

init: The init is the first process that gets loaded by the kernel. This process is used to load the rest of the process that need to be loaded for boot

GRUB: The Grand Unified Bootloader (GRUB) is the standard bootloader for Linux kernels 

PXE: Preboot Execution Environment (PXE) is a system that enables you to boot over a network. This is done using the Trivial File Transfer Protocol 

TFTP: Trivial File Transfer Protocol is a file transfer protocol that is able to be used during the BIOS proecess

initramfs: initramfs is a temporary filesystem that is loaded on to RAM. This is used to load the real root filesystem. This allows the kernel to load the real root filesystem in
user space. This could be needed for thing like RAID.

dmesg: dmesg is a command that can be executed to view the messages generated by the kernel during the boot process. The messages from the dmesg command are stored at /var/log/dmesg

kernel messages: Kernel messsages are the entries that make up /var/log/messages. This entries descripe when and what the kernel is doing.

/var/log/messages: /var/log/messages is the file that contains the kernel messages.

klogd: klogd is a daemon that logs the information of the kernel to /var/log/messages. 

syslog-ng / rsyslogd: These are replacements for klogd.

journald: the journald daemon is the logging daemon for systemd based systems. it writes its logs to the /var/log/journal file

journalctl: The journalctl is a command that allows you to convert binary log files into human readable messages